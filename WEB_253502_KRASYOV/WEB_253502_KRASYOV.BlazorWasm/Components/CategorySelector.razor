@inject IDataService DataService

<div class="col-2 border-2">
    <ul class="nav">
        <li class="nav-item dropdown">
            <button class="nav-link dropdown-toggle"
               data-bs-toggle="dropdown"
               aria-expanded="false">
                @if (DataService.SelectedCategory is null)
                {
                    <span>All</span>
                }
                else
                {
                    <span>@DataService.SelectedCategory.Name</span>
                }
            </button>
            <ul class="dropdown-menu" aria-labelledby="dropdown">
                <li>
                    <button class="dropdown-item"
                    onclick="@(async () => await SelectCategory(null))">All</button>
                </li>
                @if(DataService.Categories != null && DataService.Categories.Any())
                {
                    @foreach (var item in DataService.Categories)
                    {
                        <li>
                            <button class="dropdown-item"
                                onclick="@(async () => await SelectCategory(item))">
                                @item.Name
                            </button>
                        </li>
                    }
                }
                else
                {
                    <span class="dropdown-item">No categories available...</span>
                }
            </ul>
        </li>
    </ul>
</div>

@code {
    protected async override Task OnInitializedAsync()
    {
        DataService.DataLoaded += StateHasChanged;
        await DataService.GetCategoryListAsync();
        await InvokeAsync(StateHasChanged);
    }

    private async Task SelectCategory(Category? category)
    {
        DataService.SelectedCategory = category;
        await DataService.GetProductListAsync(DataService.SelectedCategory.NormalizedName);
    }
}